#Author: Kai Oswald
#Source: https://dev.to/kaos/complete-cicd-for-flutter-apps-42dc

name: Build Flutter apps

on:
  push:
    branches:
      - '*'
    tags:
      - v*
      - dev*
  pull_request:


jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Install Dependencies
        run: flutter packages get

      - name: Analyze
        run: flutter analyze lib test

      - name: Run tests
        run: flutter test --no-pub --coverage --test-randomize-ordering-seed random test

  build_android:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Build Android App
        run: flutter build apk

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: android
          path: build/app/outputs/**/*.apk

  build_ios:
    runs-on: macos-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: ios
          path: build/ios/iphoneos/app.ipa

  build_web:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Build web
        run: |
          flutter build web
          cd build/web
          zip -r web-app.zip .

      - name: Archive Production Artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@master
        with:
          name: web
          path: build/web/web-app.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ build_android, build_ios, build_web ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          path: build/

      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'build/**/*.apk,build/**/app.ipa,build/**/web-app.zip'

  deploy_web_dev:
    if: startsWith(github.ref, 'refs/tags/dev') || startsWith(github.ref, 'refs/tags/v')
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web
          path: build/web

      - name: <debug> list
        run: ls -lha build/web

      - name: Extract Artifact
        run: 7z x build/web/web-app.zip

      - name: <debug> list
        run: ls -lha build/web/web-app

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'

      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz build/web/web-app/ ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }}:/var/www/html/recycling_dev/

  deploy_web_prod:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ release, deploy_web_dev ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web
          path: build/web

      - name: <debug> list
        run: ls -lha build/web

      - name: Extract Artifact
        run: 7z x build/web/web-app.zip

      - name: <debug> list
        run: ls -lha build/web/web-app

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder'

      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz build/web/web-app/ ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }}:/var/www/html/recycling_prod/

# TODO: Add deployment to Google Play Store
